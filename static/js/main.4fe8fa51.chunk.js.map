{"version":3,"sources":["Form.js","App.js","index.js"],"names":["MyTextInput","label","props","useField","field","meta","name","htmlFor","touched","error","className","MyTextArea","MySelect","value","MyCheckbox","children","type","CustomForm","initialValues","email","amount","currency","text","terms","validationSchema","Yup","min","max","required","oneOf","onSubmit","values","console","log","JSON","stringify","id","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4fe8fa51.chunk.js","sourcesContent":["import { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst MyTextInput = ({label, ...props}) => {\r\n \r\n    const [field, meta] = useField(props);\r\n    const {name} = props;\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input {...props} {...field}/>\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nconst MyTextArea = ({label, ...props}) => {\r\n\r\n    const [field, meta] = useField(props);\r\n    const {name} = props;\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={name}>{label}</label>\r\n            <textarea {...props} {...field}/>\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nconst MySelect = ({label, ...props}) => {\r\n\r\n    const [field, meta] = useField(props);\r\n    const {name} = props;\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={name}>{label}</label>\r\n            <select {...props} {...field}>\r\n                <option value=\"\">Выберите валюту</option>\r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"UAH\">UAH</option>\r\n                <option value=\"RUB\">RUB</option>\r\n            </select>\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nconst MyCheckbox = ({children, ...props}) => {\r\n\r\n    const [field, meta] = useField({...props, type: 'checkbox'});\r\n\r\n    return (\r\n        <>\r\n            <label className=\"checkbox\">\r\n                <input type=\"checkbox\" {...props} {...field}/>\r\n                {children}\r\n            </label>\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nconst CustomForm = () => {\r\n\r\n    return (\r\n        <Formik\r\n            initialValues = {{\r\n                name: '',\r\n                email: '',\r\n                amount: 0,\r\n                currency: '',\r\n                text: '',\r\n                terms: false\r\n            }}\r\n            validationSchema= {Yup.object({\r\n                name: Yup.string()\r\n                        .min(2, 'Минимум 2 символа')\r\n                        .max(20, 'Максимум 20 символов')\r\n                        .required('Обязательное поле'),\r\n                email: Yup.string()\r\n                        .email('Неправильный email')\r\n                        .required('Обязательное поле'),\r\n                amount: Yup.number()\r\n                        .min(5, 'Не менее 5')\r\n                        .required('Обязательное поле'),\r\n                currency: Yup.string()\r\n                        .required('Выберите валюту'),\r\n                text: Yup.string()\r\n                        .min(10, 'Не менее 10 символов'),\r\n                terms: Yup.boolean()\r\n                        .required('Необходимо согласие')\r\n                        .oneOf([true], 'Необходимо согласие')\r\n            })}\r\n            onSubmit= {values => console.log(JSON.stringify(values, null, 2))}\r\n        >\r\n            <Form className=\"form\">\r\n                <h2>Отправить пожертвование</h2>\r\n\r\n                <MyTextInput\r\n                    label=\"Ваше имя\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                />\r\n\r\n                <MyTextInput\r\n                    label=\"Ваша почта\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                />\r\n\r\n                <MyTextInput\r\n                    label=\"Количество\"\r\n                    id=\"amount\"\r\n                    name=\"amount\"\r\n                    type=\"number\"\r\n                />\r\n\r\n                <MySelect\r\n                    label=\"Валюта\"\r\n                    id=\"currency\"\r\n                    name=\"currency\"\r\n                />\r\n\r\n                <MyTextArea\r\n                    label=\"Ваше сообщение\"\r\n                    id=\"text\"\r\n                    name=\"text\"\r\n                />\r\n\r\n                <MyCheckbox\r\n                    name=\"terms\">\r\n                        Соглашение с политикой конфиденциальности\r\n                </MyCheckbox>\r\n\r\n                <button type=\"submit\">Отправить</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default CustomForm;","import './app.scss';\r\nimport CustomForm from './Form';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n        <CustomForm/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}